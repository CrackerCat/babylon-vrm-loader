{"version":3,"sources":["webpack://babylon-vrm-loader/webpack/universalModuleDefinition","webpack://babylon-vrm-loader/webpack/bootstrap","webpack://babylon-vrm-loader/./src/index.ts","webpack://babylon-vrm-loader/./src/test/index.ts","webpack://babylon-vrm-loader/./src/vcast-vci-material-unity.ts","webpack://babylon-vrm-loader/./src/vrm-extension.ts","webpack://babylon-vrm-loader/./src/vrm-file-loader.ts","webpack://babylon-vrm-loader/./src/vrm-interfaces.ts","webpack://babylon-vrm-loader/./src/vrm-manager.ts","webpack://babylon-vrm-loader/./src/vrm-material-generator.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gBAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAiB,4BAA4B;AAC7C;AACA;AACA,0BAAkB,2BAA2B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;AACA;AACA;AACA,wBAAgB,uBAAuB;AACvC;;;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;ACtJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACX;AACE;AACD;AACH;AACW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLiC;AAClB;AACmB;AACA;AACZ;AACkB;AACf;AACb;AACF;AACL;AAEA;AACS;AACG;AAC5B;AACZ;AAElB,SAAe,IAAI;;;;;;oBACT,eAAe,GAAG,kBAAkB,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","file":"main.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"babylon-vrm-loader\"] = factory();\n\telse\n\t\troot[\"babylon-vrm-loader\"] = factory();\n})(window, function() {\nreturn "," \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"main\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonpbabylon_vrm_loader\"] = window[\"webpackJsonpbabylon_vrm_loader\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"./src/test/index.ts\",\"vendors~main\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from './vcast-vci-material-unity';\nexport * from './vrm-extension';\nexport * from './vrm-file-loader';\nexport * from './vrm-interfaces';\nexport * from './vrm-manager';\nexport * from './vrm-material-generator';\n","import { ArcRotateCamera } from '@babylonjs/core/Cameras/arcRotateCamera';\r\nimport { Engine } from '@babylonjs/core/Engines/engine';\r\nimport { DirectionalLight } from '@babylonjs/core/Lights/directionalLight';\r\nimport { HemisphericLight } from '@babylonjs/core/Lights/hemisphericLight';\r\nimport { PointLight } from '@babylonjs/core/Lights/pointLight';\r\nimport { ShadowGenerator } from '@babylonjs/core/Lights/Shadows/shadowGenerator';\r\nimport { SceneLoader } from '@babylonjs/core/Loading/sceneLoader';\r\nimport { Vector3 } from '@babylonjs/core/Maths/math';\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport { Scene } from '@babylonjs/core/scene';\r\n\r\nimport '@babylonjs/core/Helpers/sceneHelpers';\r\nimport '@babylonjs/core/Meshes/Builders/sphereBuilder';\r\nimport '@babylonjs/core/Meshes/Builders/torusKnotBuilder';\r\nimport '@babylonjs/inspector';\r\nimport '../index';\r\n\r\nasync function main() {\r\n    const debugProperties = getDebugProperties();\r\n    const canvas = document.getElementById('main-canvas') as HTMLCanvasElement;\r\n    const engine = new Engine(\r\n        canvas,\r\n        true,\r\n        {\r\n            alpha: false,\r\n            disableWebGL2Support: debugProperties.webgl1,\r\n        },\r\n    );\r\n\r\n    const scene = new Scene(engine);\r\n    const camera = new ArcRotateCamera('MainCamera1', 0, 0, 3, new Vector3(0, 1.2, 0), scene, true);\r\n    camera.lowerRadiusLimit = 0.1;\r\n    camera.upperRadiusLimit = 20;\r\n    camera.wheelDeltaPercentage = 0.01;\r\n    camera.minZ = 0.3;\r\n    camera.position = new Vector3(0, 1.2, -3);\r\n    camera.attachControl(canvas, true);\r\n\r\n    scene.createDefaultEnvironment({\r\n        createGround: true,\r\n        createSkybox: false,\r\n        enableGroundMirror: false,\r\n        enableGroundShadow: false,\r\n    });\r\n\r\n    // Lights\r\n    const directionalLight = new DirectionalLight('DirectionalLight1', new Vector3(0, -0.5, 1.0), scene);\r\n    directionalLight.position = new Vector3(0, 25, -50);\r\n    directionalLight.setEnabled(true);\r\n    const hemisphericLight = new HemisphericLight('HemisphericLight1', new Vector3(-0.2, -0.8, -1), scene);\r\n    hemisphericLight.setEnabled(false);\r\n    const pointLight = new PointLight('PointLight1', new Vector3(0, 0, 1), scene);\r\n    pointLight.setEnabled(false);\r\n\r\n    // Meshes\r\n    const standardMaterialSphere = Mesh.CreateSphere('StandardMaterialSphere1', 16, 1, scene);\r\n    standardMaterialSphere.position = new Vector3(1.5, 1.2, 0);\r\n    standardMaterialSphere.receiveShadows = true;\r\n\r\n    const shadowCaster = Mesh.CreateTorusKnot('ShadowCaster', 1, 0.2, 32, 32, 2, 3, scene);\r\n    shadowCaster.position = new Vector3(0.0, 5.0, -10.0);\r\n    shadowCaster.setEnabled(debugProperties.shadow);\r\n    if (debugProperties.shadow) {\r\n        const shadowGenerator = new ShadowGenerator(1024, directionalLight);\r\n        shadowGenerator.addShadowCaster(shadowCaster);\r\n    }\r\n\r\n    if (debugProperties.inspector) {\r\n        await scene.debugLayer.show({\r\n            globalRoot: document.getElementById('wrapper') as HTMLMainElement,\r\n        });\r\n    }\r\n\r\n    // Expose current scene\r\n    (window as any).currentScene = scene;\r\n\r\n    engine.runRenderLoop(() => {\r\n        scene.render();\r\n        shadowCaster.rotate(Vector3.Up(), 0.01);\r\n    });\r\n    window.addEventListener('resize', () => {\r\n        engine.resize();\r\n    });\r\n    await SceneLoader.AppendAsync('./', 'AliciaSolid.vrm', scene);\r\n\r\n    let fileCount = 1;\r\n    (document.getElementById('file-input') as HTMLInputElement).addEventListener('change', (evt) => {\r\n        const file = (evt as any).target.files[0];\r\n        console.log(`loads ${file.name} ${file.size} bytes`);\r\n        const currentMeshCount = scene.meshes.length;\r\n        SceneLoader.Append('file:', file, scene, () => {\r\n            console.log(`loaded ${file.name}`);\r\n            for (let i = currentMeshCount; i < scene.meshes.length; i++) {\r\n                scene.meshes[i].translate(Vector3.Right(), 1.5 * fileCount);\r\n                scene.meshes[i].receiveShadows = true;\r\n            }\r\n            fileCount++;\r\n        });\r\n    });\r\n}\r\n\r\ninterface DebugProperties {\r\n    webgl1: boolean;\r\n    shadow: boolean;\r\n    inspector: boolean;\r\n}\r\n\r\nfunction getDebugProperties(): DebugProperties {\r\n    const href = window.location.href;\r\n\r\n    return {\r\n        webgl1: href.includes('webgl1'),\r\n        shadow: href.includes('shadow'),\r\n        inspector: href.includes('inspector'),\r\n    };\r\n}\r\n\r\nmain().catch((reason) => {\r\n    console.error(reason);\r\n});\r\n","import { Material } from '@babylonjs/core/Materials/material';\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\nimport { Nullable } from '@babylonjs/core/types';\nimport { GLTFLoader, IGLTFLoaderExtension, IMaterial } from '@babylonjs/loaders/glTF/2.0';\nimport { VRMMaterialGenerator } from './vrm-material-generator';\n\n/**\n * `extensions` に入る拡張キー\n */\nconst NAME = 'VCAST_vci_material_unity';\n\n/**\n * VCAST_vci_material_unity 拡張を処理する\n */\nexport class VCAST_vci_material_unity implements IGLTFLoaderExtension {\n    /**\n     * @inheritdoc\n     */\n    public readonly name = NAME;\n    /**\n     * @inheritdoc\n     */\n    public enabled = true;\n\n    /**\n     * @inheritdoc\n     */\n    public constructor(\n        private loader: GLTFLoader,\n    ) {}\n\n    /**\n     * @inheritdoc\n     */\n    public dispose(): void {\n        delete this.loader;\n    }\n\n    /**\n     * @inheritdoc\n     */\n    public _loadMaterialAsync(\n        context: string,\n        material: IMaterial,\n        mesh: Mesh,\n        babylonDrawMode: number,\n        assign: (babylonMaterial: Material) => void,\n    ): Nullable<Promise<Material>> {\n        // ジェネレータでマテリアルを生成する\n        return (new VRMMaterialGenerator(this.loader)).generate(context, material, mesh, babylonDrawMode, assign);\n    }\n}\n\n// ローダーに登録する\nGLTFLoader.RegisterExtension(NAME, (loader) => new VCAST_vci_material_unity(loader));\n","import { Material } from '@babylonjs/core/Materials/material';\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { GLTFLoader, IGLTFLoaderExtension, IMaterial, IMeshPrimitive } from '@babylonjs/loaders/glTF/2.0';\r\nimport { VRMManager } from './vrm-manager';\r\nimport { VRMMaterialGenerator } from './vrm-material-generator';\r\n\r\n/**\r\n * `extensions` に入る拡張キー\r\n */\r\nconst NAME = 'VRM';\r\n\r\n/**\r\n * VRM 拡張を処理する\r\n * [Specification](https://github.com/vrm-c/UniVRM/tree/master/specification/)\r\n */\r\nexport class VRM implements IGLTFLoaderExtension {\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public readonly name = NAME;\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public enabled = true;\r\n    /**\r\n     * この Mesh index 以降が読み込み対象\r\n     */\r\n    private meshesFrom = 0;\r\n    /**\r\n     * この TransformNode index 以降が読み込み対象\r\n     */\r\n    private transformNodesFrom = 0;\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public constructor(\r\n        private loader: GLTFLoader,\r\n    ) {\r\n        this.meshesFrom = this.loader.babylonScene.meshes.length;\r\n        this.transformNodesFrom = this.loader.babylonScene.transformNodes.length;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public dispose(): void {\r\n        delete this.loader;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public onReady() {\r\n        if (!this.loader.gltf.extensions || !this.loader.gltf.extensions[NAME]) {\r\n            return;\r\n        }\r\n        const scene = this.loader.babylonScene;\r\n        const manager = new VRMManager(\r\n            this.loader.gltf.extensions[NAME],\r\n            this.loader.babylonScene,\r\n            this.meshesFrom,\r\n            this.transformNodesFrom,\r\n        );\r\n        scene.metadata = scene.metadata || {};\r\n        scene.metadata.vrmManagers = scene.metadata.vrmManagers || [];\r\n        scene.metadata.vrmManagers.push(manager);\r\n        this.loader.babylonScene.onDisposeObservable.add(() => {\r\n            // Scene dispose 時に Manager も破棄する\r\n            manager.dispose();\r\n            this.loader.babylonScene.metadata.vrmManagers = [];\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public _loadVertexDataAsync(\r\n        context: string,\r\n        primitive: IMeshPrimitive,\r\n        babylonMesh: Mesh,\r\n    ) {\r\n        if (!primitive.extras || !primitive.extras.targetNames) {\r\n            return null;\r\n        }\r\n        // まだ MorphTarget が生成されていないので、メタ情報にモーフターゲット情報を入れておく\r\n        babylonMesh.metadata = babylonMesh.metadata || {};\r\n        babylonMesh.metadata.vrmTargetNames = primitive.extras.targetNames;\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public _loadMaterialAsync(\r\n        context: string,\r\n        material: IMaterial,\r\n        mesh: Mesh,\r\n        babylonDrawMode: number,\r\n        assign: (babylonMaterial: Material) => void,\r\n    ): Nullable<Promise<Material>> {\r\n        // ジェネレータでマテリアルを生成する\r\n        return (new VRMMaterialGenerator(this.loader)).generate(context, material, mesh, babylonDrawMode, assign);\r\n    }\r\n}\r\n\r\n// ローダーに登録する\r\nGLTFLoader.RegisterExtension(NAME, (loader) => new VRM(loader));\r\n","import { SceneLoader } from '@babylonjs/core/Loading/sceneLoader';\nimport { GLTFFileLoader } from '@babylonjs/loaders/glTF/glTFFileLoader';\n\n/**\n * VRM/VCI ファイルを読み込めるようにする\n * 拡張子を変更しただけ\n */\nexport class VRMFileLoader extends GLTFFileLoader {\n  public name = 'vrm';\n  public extensions = {\n    '.vrm': { isBinary: true },\n    '.vci': { isBinary: true },\n  };\n\n  public createPlugin() {\n      return new VRMFileLoader();\n  }\n}\n\nif (SceneLoader) {\n  SceneLoader.RegisterPlugin(new VRMFileLoader());\n}\n","export interface IVRMVector3 {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n}\r\n\r\n/**\r\n * extensions.VRM\r\n */\r\nexport interface IVRM {\r\n    exporterVersion: string;\r\n    specVersion: string;\r\n    meta: IVRMMeta;\r\n    humanoid: IVRMHumanoid;\r\n    firstPerson: IVRMFirstPerson;\r\n    blendShapeMaster: IVRMBlendShapeMaster;\r\n    secondaryAnimation: IVRMSecondaryAnimation;\r\n    materialProperties: IVRMMaterialProperty[];\r\n}\r\n\r\n/**\r\n * extensions.VRM.meta\r\n */\r\nexport interface IVRMMeta {\r\n    title: string;\r\n    version: string;\r\n    author: string;\r\n    contactInformation?: string;\r\n    reference?: string;\r\n    texture?: number;\r\n}\r\n\r\n/**\r\n * extensions.VRM.humanoid\r\n */\r\nexport interface IVRMHumanoid {\r\n    humanBones: IVRMHumanoidBone[];\r\n    armStretch?: number;\r\n    legStretch?: number;\r\n    upperArmTwist?: number;\r\n    lowerArmTwist?: number;\r\n    upperLegTwist?: number;\r\n    lowerLegTwist?: number;\r\n    feetSpacing?: number;\r\n    hasTranslationDoF?: boolean;\r\n}\r\n\r\nexport interface IVRMHumanoidBone {\r\n    bone: string;\r\n    node: number;\r\n    useDefaultValues: boolean;\r\n    min?: IVRMVector3;\r\n    max?: IVRMVector3;\r\n    center?: IVRMVector3;\r\n    axisLength?: number;\r\n}\r\n\r\nexport interface IVRMFirstPersonMeshAnnotation {\r\n    mesh: number;\r\n    firstPersonFlag: string;\r\n}\r\n\r\nexport interface IVRMFirstPersonDegreeMap {\r\n    curve: number[];\r\n    xRange: number;\r\n    yRange: number;\r\n}\r\n\r\n/**\r\n * extensions.VRM.firstPerson\r\n */\r\nexport interface IVRMFirstPerson {\r\n    firstPersonBone: number;\r\n    firstPersonBoneOffset: IVRMVector3;\r\n    meshAnnotations: IVRMFirstPersonMeshAnnotation[];\r\n    lookAtTypeName: 'Bone' | 'BlendShape';\r\n    lookAtHorizontalInner: IVRMFirstPersonDegreeMap;\r\n    lookAtHorizontalOuter: IVRMFirstPersonDegreeMap;\r\n    lookAtVerticalDown: IVRMFirstPersonDegreeMap;\r\n    lookAtVerticalUp: IVRMFirstPersonDegreeMap;\r\n}\r\n\r\n/**\r\n * extensions.VRM.blendShapeMaster\r\n */\r\nexport interface IVRMBlendShapeMaster {\r\n    blendShapeGroups: IVRMBlendShapeGroup[];\r\n}\r\n\r\nexport interface IVRMBlendShapeGroup {\r\n    name: string;\r\n    presetName: string;\r\n    binds: IVRMBlendShapeBind[];\r\n    materialValues: IVRMBlendShapeMaterialBind[];\r\n}\r\n\r\nexport interface IVRMBlendShapeBind {\r\n    mesh: number;\r\n    index: number;\r\n    weight: number;\r\n}\r\n\r\nexport interface IVRMBlendShapeMaterialBind {\r\n    materialName: string;\r\n    propertyName: string;\r\n    targetValue: number[];\r\n}\r\n\r\nexport interface IVRMSecondaryAnimationSpring {\r\n    comment: string;\r\n    stiffiness: number;\r\n    gravityPower: number;\r\n    gravityDir: IVRMVector3;\r\n    dragForce: number;\r\n    center: number;\r\n    hitRadius: number;\r\n    bones: number[];\r\n    colliderGroups: number[];\r\n}\r\n\r\nexport interface IVRMSecondaryAnimationCollider {\r\n    offset: IVRMVector3;\r\n    radius: number;\r\n}\r\n\r\nexport interface IVRMSecondaryAnimationColliderGroup {\r\n    node: number;\r\n    colliders: IVRMSecondaryAnimationCollider[];\r\n}\r\n\r\n/**\r\n * extensions.VRM.secondaryAnimation\r\n */\r\nexport interface IVRMSecondaryAnimation {\r\n    boneGroups: IVRMSecondaryAnimationSpring[];\r\n    colliderGroups: IVRMSecondaryAnimationColliderGroup[];\r\n}\r\n\r\nexport enum IVRMMaterialPropertyShader {\r\n    VRM_USE_GLTFSHADER = 'VRM_USE_GLTFSHADER',\r\n    VRMMToon = 'VRM/MToon',\r\n    VRMUnlitTransparentZWrite = 'VRM/UnlitTransparentZWrite',\r\n}\r\n\r\nexport interface IVRMMaterialPropertyFloatProperties {\r\n    _Cutoff?: number;\r\n    _BumpScale?: number;\r\n    _ReceiveShadowRate?: number;\r\n    _ShadingGradeRate?: number;\r\n    _ShadeShift?: number;\r\n    _ShadeToony?: number;\r\n    _LightColorAttenuation?: number;\r\n    _IndirectLightIntensity?: number;\r\n    _OutlineWidth?: number;\r\n    _OutlineScaledMaxDistance?: number;\r\n    _OutlineLightingMix?: number;\r\n    _DebugMode?: number;\r\n    _BlendMode?: number;\r\n    _OutlineWidthMode?: number;\r\n    _OutlineColorMode?: number;\r\n    _CullMode?: number;\r\n    _OutlineCullMode?: number;\r\n    _SrcBlend?: number;\r\n    _DstBlend?: number;\r\n    _ZWrite?: number;\r\n    [prop: string]: number | undefined;\r\n}\r\n\r\nexport type IVRMVectorMaterialProperty = [number, number, number, number];\r\n\r\nexport interface IVRMMaterialPropertyVectorProperties {\r\n    _Color?: IVRMVectorMaterialProperty;\r\n    _ShadeColor?: IVRMVectorMaterialProperty;\r\n    _MainTex?: IVRMVectorMaterialProperty;\r\n    _ShadeTexture?: IVRMVectorMaterialProperty;\r\n    _BumpMap?: IVRMVectorMaterialProperty;\r\n    _ReceiveShadowTexture?: IVRMVectorMaterialProperty;\r\n    _ShadingGradeTexture?: IVRMVectorMaterialProperty;\r\n    _SphereAdd?: IVRMVectorMaterialProperty;\r\n    _EmissionColor?: IVRMVectorMaterialProperty;\r\n    _EmissionMap?: IVRMVectorMaterialProperty;\r\n    _OutlineWidthTexture?: IVRMVectorMaterialProperty;\r\n    _OutlineColor?: IVRMVectorMaterialProperty;\r\n    [prop: string]: IVRMVectorMaterialProperty | undefined;\r\n}\r\n\r\nexport interface IVRMMaterialPropertyTextureProperties {\r\n    _MainTex?: number;\r\n    _ShadeTexture?: number;\r\n    _BumpMap?: number;\r\n    _ReceiveShadowTexture?: number;\r\n    _ShadingGradeTexture?: number;\r\n    _SphereAdd?: number;\r\n    _EmissionMap?: number;\r\n    _OutlineWidthTexture?: number;\r\n    [prop: string]: number | undefined;\r\n}\r\n\r\nexport interface IVRMMaterialPropertyKeywordMap {\r\n    _NORMALMAP?: boolean;\r\n    _ALPHATEST_ON?: boolean;\r\n    _ALPHABLEND_ON?: boolean;\r\n    _ALPHAPREMULTIPLY_ON?: boolean;\r\n}\r\n\r\nexport interface IVRMMaterialPropertyTagMap {\r\n    RenderType?: 'Opaque' | 'TransparentCutout' | 'Transparent';\r\n}\r\n\r\n/**\r\n * extensions.VRM.materialProperties\r\n */\r\nexport interface IVRMMaterialProperty {\r\n    name: string;\r\n    shader: IVRMMaterialPropertyShader;\r\n    renderQueue: number;\r\n    floatProperties: IVRMMaterialPropertyFloatProperties;\r\n    vectorProperties: IVRMMaterialPropertyVectorProperties;\r\n    textureProperties: IVRMMaterialPropertyTextureProperties;\r\n    keywordMap: IVRMMaterialPropertyKeywordMap;\r\n    tagMap: IVRMMaterialPropertyTagMap;\r\n}\r\n","import { IVRM } from './vrm-interfaces';\r\nimport { Scene } from '@babylonjs/core/scene';\r\nimport { MorphTarget } from '@babylonjs/core/Morph/morphTarget';\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { TransformNode } from '@babylonjs/core/Meshes/transformNode';\r\n\r\ninterface MorphTargetSetting {\r\n    target: MorphTarget;\r\n    weight: number;\r\n}\r\n\r\ninterface MorphTargetMap {\r\n    [label: string]: MorphTargetSetting[];\r\n}\r\n\r\ninterface TransformNodeMap {\r\n    [label: string]: TransformNode;\r\n}\r\n\r\ninterface TransformNodeCache {\r\n    [node: number]: TransformNode;\r\n}\r\n\r\nexport type HumanBoneName = 'hips' | 'leftUpperLeg' | 'rightUpperLeg' | 'leftLowerLeg' | 'rightLowerLeg' | 'leftFoot' | 'rightFoot' | 'spine' | 'chest' | 'neck' | 'head' | 'leftShoulder' | 'rightShoulder' | 'leftUpperArm' | 'rightUpperArm' | 'leftLowerArm' | 'rightLowerArm' | 'leftHand' | 'rightHand' | 'leftToes' | 'rightToes' | 'leftEye' | 'rightEye' | 'jaw' | 'leftThumbProximal' | 'leftThumbIntermediate' | 'leftThumbDistal' | 'leftIndexProximal' | 'leftIndexIntermediate' | 'leftIndexDistal' | 'leftMiddleProximal' | 'leftMiddleIntermediate' | 'leftMiddleDistal' | 'leftRingProximal' | 'leftRingIntermediate' | 'leftRingDistal' | 'leftLittleProximal' | 'leftLittleIntermediate' | 'leftLittleDistal' | 'rightThumbProximal' | 'rightThumbIntermediate' | 'rightThumbDistal' | 'rightIndexProximal' | 'rightIndexIntermediate' | 'rightIndexDistal' | 'rightMiddleProximal' | 'rightMiddleIntermediate' | 'rightMiddleDistal' | 'rightRingProximal' | 'rightRingIntermediate' | 'rightRingDistal' | 'rightLittleProximal' | 'rightLittleIntermediate' | 'rightLittleDistal' | 'upperChest' | string;\r\n\r\n/**\r\n * VRM キャラクターを動作させるためのマネージャ\r\n */\r\nexport class VRMManager {\r\n    private morphTargetMap: MorphTargetMap = {};\r\n    private presetMorphTargetMap: MorphTargetMap = {};\r\n    private transformNodeMap: TransformNodeMap = {};\r\n    private transformNodeCache: Nullable<TransformNodeCache> = null;\r\n\r\n    public constructor(\r\n        public readonly ext: IVRM,\r\n        public readonly scene: Scene,\r\n        private readonly meshesFrom: number,\r\n        private readonly transformNodesFrom: number,\r\n    ) {\r\n        this.constructMorphTargetMap();\r\n        this.constructTransformNodeMap();\r\n    }\r\n\r\n    public dispose(): void {\r\n        this.morphTargetMap = {};\r\n        this.presetMorphTargetMap = {};\r\n        this.transformNodeMap = {};\r\n        this.transformNodeCache = null;\r\n    }\r\n\r\n    /**\r\n     * モーフィングを行う\r\n     * @param label モーフ名\r\n     * @param value 値(0〜1)\r\n     */\r\n    public morphing(label: string, value: number): void {\r\n        if (!this.morphTargetMap[label]) {\r\n            throw new Error(`Unknown morph label ${label}`);\r\n        }\r\n        this.morphTargetMap[label].forEach((setting) => {\r\n            setting.target.influence = Math.max(0, Math.min(1, value)) * (setting.weight / 100);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * プリセットモーフのモーフィングを行う\r\n     * @param label モーフ名\r\n     * @param value 値(0〜1)\r\n     */\r\n    public morphingPreset(label: string, value: number): void {\r\n        if (!this.presetMorphTargetMap[label]) {\r\n            throw new Error(`Unknown preset morph label ${label}`);\r\n        }\r\n        this.presetMorphTargetMap[label].forEach((setting) => {\r\n            setting.target.influence = Math.max(0, Math.min(1, value)) * (setting.weight / 100);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * ボーン名からそのボーンに該当する TransformNode を取得する\r\n     * @param name HumanBoneName\r\n     */\r\n    public getBone(name: HumanBoneName): Nullable<TransformNode> {\r\n        return this.transformNodeMap[name] || null;\r\n    }\r\n\r\n    /**\r\n     * 事前に MorphTarget と BlendShape を紐付ける\r\n     */\r\n    private constructMorphTargetMap(): void {\r\n        if (!this.ext.blendShapeMaster || !this.ext.blendShapeMaster.blendShapeGroups) {\r\n            return;\r\n        }\r\n        this.ext.blendShapeMaster.blendShapeGroups.forEach((g) => {\r\n            if (!g.binds) {\r\n                return;\r\n            }\r\n            g.binds.forEach((b) => {\r\n                const mesh = this.findMesh(b.mesh);\r\n                if (!mesh) {\r\n                    console.log(`Undefined BlendShapeBind Mesh`, b);\r\n                    return;\r\n                }\r\n                const morphTargetManager = mesh.morphTargetManager;\r\n                if (!morphTargetManager) {\r\n                    console.log(`Undefined morphTargetManager`, b);\r\n                    return;\r\n                }\r\n                const target = morphTargetManager.getTarget(b.index);\r\n                this.morphTargetMap[g.name] = this.morphTargetMap[g.name] || [];\r\n                this.morphTargetMap[g.name].push({\r\n                    target,\r\n                    weight: b.weight,\r\n                });\r\n                if (g.presetName) {\r\n                    this.presetMorphTargetMap[g.presetName] = this.morphTargetMap[g.presetName] || [];\r\n                    this.presetMorphTargetMap[g.presetName].push({\r\n                        target,\r\n                        weight: b.weight,\r\n                    });\r\n                }\r\n            });\r\n            // TODO: materialValues\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 事前に TransformNode と bone 名を紐づける\r\n     */\r\n    private constructTransformNodeMap() {\r\n        this.ext.humanoid.humanBones.forEach((b) => {\r\n            const node = this.findTransformNode(b.node);\r\n            if (!node) {\r\n                return;\r\n            }\r\n            this.transformNodeMap[b.bone] = node;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * node 番号から該当する TransformNode を探す\r\n     * 数が多くなるのでキャッシュに参照を持つ構造にする\r\n     * gltf の node 番号は `metadata.gltf.pointers` に記録されている\r\n     * @param nodeIndex\r\n     */\r\n    private findTransformNode(nodeIndex: number): Nullable<TransformNode> {\r\n        if (!this.transformNodeCache) {\r\n            this.transformNodeCache = this.scene.transformNodes.filter((n, index) => {\r\n                return index >= this.transformNodesFrom\r\n                    && !!n.metadata\r\n                    && !!n.metadata.gltf\r\n                    && !!n.metadata.gltf.pointers\r\n                    && n.metadata.gltf.pointers.length !== 0;\r\n            }).reduce<TransformNodeCache>((prev: TransformNodeCache, curr: TransformNode) => {\r\n                let nodeIndex = -1;\r\n                for (const p of curr.metadata.gltf.pointers) {\r\n                    if (p.startsWith(`/nodes/`)) {\r\n                        nodeIndex = parseInt((p as string).substr(7), 10);\r\n                    }\r\n                }\r\n                if (nodeIndex !== -1) {\r\n                    prev[nodeIndex] = curr;\r\n                }\r\n                return prev;\r\n            }, {});\r\n        }\r\n        return this.transformNodeCache[nodeIndex] || null;\r\n    }\r\n\r\n    /**\r\n     * mesh 番号からメッシュを探す\r\n     * gltf の mesh 番号は `metadata.gltf.pointers` に記録されている\r\n     */\r\n    private findMesh(meshIndex: number): Nullable<Mesh> {\r\n        const mesh = this.scene.meshes.find((m, index) => {\r\n            if (index < this.meshesFrom || !m.metadata || !m.metadata.gltf || !m.metadata.gltf.pointers || m.metadata.gltf.pointers.length < 1) {\r\n                return false;\r\n            }\r\n            const pointers: string[] = m.metadata.gltf.pointers;\r\n            for (const p of pointers) {\r\n                if (p.startsWith(`/meshes/${meshIndex}`)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        });\r\n        if (mesh) {\r\n            return mesh as Mesh;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { Material } from '@babylonjs/core/Materials/material';\r\nimport { BaseTexture } from '@babylonjs/core/Materials/Textures/baseTexture';\r\nimport { Texture } from '@babylonjs/core/Materials/Textures/texture';\r\nimport { Color3 } from '@babylonjs/core/Maths/math';\r\nimport { Mesh } from '@babylonjs/core/Meshes/mesh';\r\nimport { Nullable } from '@babylonjs/core/types';\r\nimport { GLTFLoader, IMaterial } from '@babylonjs/loaders/glTF/2.0';\r\nimport { MToonMaterial } from 'babylon-mtoon-material';\r\nimport { IVRMMaterialProperty, IVRMMaterialPropertyShader } from './vrm-interfaces';\r\nimport { Engine } from '@babylonjs/core/Engines/engine';\r\n\r\n/**\r\n * VRM で指定される Material を生成する\r\n * [VRM が提供するシェーダ](https://dwango.github.io/vrm/vrm_spec/#vrm%E3%81%8C%E6%8F%90%E4%BE%9B%E3%81%99%E3%82%8B%E3%82%B7%E3%82%A7%E3%83%BC%E3%83%80%E3%83%BC) を特定し読み込む\r\n * - UnlitTexture: 不透明, VRM ファイル側で [KHR_materials_unlit](https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_unlit/) が定義されているため、何もしない\r\n * - UnlitCutout: 透明度が閾値以下の部分を透明とする, 同上\r\n * - UnlitTransparent: アルファブレンド。ZWriteしない, 同上\r\n * - UnlitTransparentZWrite: アルファブレンド。ZWriteする, 同上に加え、プロパティで ZWrite を強制しています\r\n * - MToon: MToonMaterial を実装し差し替えています。\r\n */\r\nexport class VRMMaterialGenerator {\r\n    /**\r\n     * MToonMaterial テクスチャ名のマッピング\r\n     */\r\n    public static readonly TEXTURE_MAP = {\r\n        _MainTex: 'diffuseTexture',\r\n        _ShadeTexture: 'shadeTexture',\r\n        _EmissionMap: 'emissiveTexture',\r\n        _BumpMap: 'bumpTexture',\r\n        _ReceiveShadowTexture: 'receiveShadowTexture',\r\n        _ShadingGradeTexture: 'shadingGradeTexture',\r\n        _SphereAdd: 'matCapTexture',\r\n        _OutlineWidthTexture: 'outlineWidthTexture',\r\n    };\r\n\r\n    /**\r\n     * @inheritdoc\r\n     */\r\n    public constructor(\r\n        private readonly loader: GLTFLoader,\r\n    ) {}\r\n\r\n    /**\r\n     * マテリアルを生成する Promise を返す\r\n     * VRM 対象外の場合は null\r\n     */\r\n    public generate(\r\n        context: string,\r\n        material: IMaterial,\r\n        mesh: Mesh,\r\n        babylonDrawMode: number,\r\n        assign: (babylonMaterial: Material) => void,\r\n    ): Nullable<Promise<Material>> {\r\n        const materials = this.getMaterialProperties();\r\n        if (!materials) {\r\n            return null;\r\n        }\r\n        const materialProp = this.findMaterialPropertyByName(material.name, materials);\r\n        if (!materialProp) {\r\n            return null;\r\n        }\r\n        const newMaterial = this.createMaterialByShader(context, material, babylonDrawMode, materialProp);\r\n        if (!newMaterial) {\r\n            return null;\r\n        }\r\n        assign(newMaterial);\r\n        if (newMaterial instanceof MToonMaterial) {\r\n            mesh.alphaIndex = materialProp.renderQueue;\r\n            return this.loadMToonTexturesAsync(context, newMaterial, materialProp);\r\n        }\r\n        return Promise.resolve(newMaterial);\r\n    }\r\n\r\n    /**\r\n     * VRM または VCI からマテリアルプロパティの配列を探す\r\n     */\r\n    private getMaterialProperties(): Nullable<IVRMMaterialProperty[]> {\r\n        if (!this.loader.gltf.extensions) {\r\n            return null;\r\n        }\r\n        if (this.loader.gltf.extensions.VRM && this.loader.gltf.extensions.VRM.materialProperties) {\r\n            return this.loader.gltf.extensions.VRM.materialProperties;\r\n        }\r\n        if (this.loader.gltf.extensions.VCAST_vci_material_unity && this.loader.gltf.extensions.VCAST_vci_material_unity.materials) {\r\n            return this.loader.gltf.extensions.VCAST_vci_material_unity.materials;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * テクスチャを読み込む\r\n     * @param context 現在のコンテキスト\r\n     * @param material 生成した MToonMaterial\r\n     * @param prop 生成した MToonMaterial のマテリアルプロパティ\r\n     */\r\n    private loadMToonTexturesAsync(\r\n        context: string,\r\n        material: MToonMaterial,\r\n        prop: IVRMMaterialProperty,\r\n    ): Promise<Material> {\r\n        const promises: Array<Promise<BaseTexture>> = [];\r\n        if (!prop.vectorProperties._MainTex) {\r\n            return Promise.resolve(material);\r\n        }\r\n        // 全てのテクスチャの UV Offset & Scale はメインテクスチャのものを流用する\r\n        const uvOffsetScale = prop.vectorProperties._MainTex;\r\n        for (const baseName of Object.keys(VRMMaterialGenerator.TEXTURE_MAP)) {\r\n            const index = prop.textureProperties[baseName];\r\n            if (typeof index === 'undefined') {\r\n                continue;\r\n            }\r\n            const propName = (VRMMaterialGenerator.TEXTURE_MAP as any)[baseName] as string;\r\n            const assignTexture = ((name: string) => {\r\n                return (babylonTexture: BaseTexture) => {\r\n                    // 実際は Texture インスタンスが来るのでキャスト\r\n                    const t = babylonTexture as Texture;\r\n                    t.uOffset = uvOffsetScale[0];\r\n                    t.vOffset = uvOffsetScale[1];\r\n                    t.uScale = uvOffsetScale[2];\r\n                    t.vScale = uvOffsetScale[3];\r\n                    (material as any)[name] = t;\r\n                };\r\n            })(propName);\r\n\r\n            promises.push(this.loader.loadTextureInfoAsync(context, {\r\n                index,\r\n                texCoord: 0,\r\n            }, assignTexture));\r\n        }\r\n        return Promise.all(promises).then(() => material);\r\n    }\r\n\r\n    /**\r\n     * シェーダ名からマテリアルを推測して生成する\r\n     * @param context 現在のコンテキスト\r\n     * @param material glTF マテリアル\r\n     * @param babylonDrawMode 描画種類\r\n     * @param prop 生成するマテリアルプロパティ\r\n     */\r\n    private createMaterialByShader(\r\n        context: string,\r\n        material: IMaterial,\r\n        babylonDrawMode: number,\r\n        prop: IVRMMaterialProperty,\r\n    ): Nullable<Material> {\r\n        if (prop.shader === IVRMMaterialPropertyShader.VRMMToon) {\r\n            const mtoonMaterial = new MToonMaterial(\r\n                material.name || `material${material.index}`,\r\n                this.loader.babylonScene,\r\n            );\r\n            this.setMToonMaterialProperties(mtoonMaterial, prop);\r\n            return mtoonMaterial;\r\n        }\r\n        if (prop.shader === IVRMMaterialPropertyShader.VRMUnlitTransparentZWrite) {\r\n            const mat = this.loader.createMaterial(context, material, babylonDrawMode);\r\n            // 通常マテリアルに Depth Write を強制\r\n            mat.disableDepthWrite = false;\r\n            mat.forceDepthWrite = true;\r\n            return mat;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * マテリアル名から MaterialProperty を探す\r\n     * @param materialName マテリアル名\r\n     * @param extension 拡張データ\r\n     */\r\n    private findMaterialPropertyByName(materialName?: string, materials?: IVRMMaterialProperty[]): Nullable<IVRMMaterialProperty> {\r\n        if (!materialName || !materials) {\r\n            return null;\r\n        }\r\n        const mats = materials.filter(\r\n            (v) => v.name === materialName,\r\n        );\r\n        if (mats.length === 0) {\r\n            return null;\r\n        } else if (mats.length >= 2) {\r\n            this.loader.log('Duplicated name found' + materialName);\r\n        }\r\n        return mats[mats.length - 1];\r\n    }\r\n\r\n    /**\r\n     * マテリアルに VRM プロパティを設定\r\n     * VRM プロパティとマテリアルプロパティのマッピングを行っている\r\n     * 初期値はマテリアル実装側に持っているため、値がある場合のみ上書きする\r\n     * @param material\r\n     * @param prop\r\n     */\r\n    private setMToonMaterialProperties(material: MToonMaterial, prop: IVRMMaterialProperty) {\r\n        if (typeof prop.floatProperties._DebugMode !== 'undefined') {\r\n            material.debugMode = prop.floatProperties._DebugMode;\r\n        }\r\n        if (typeof prop.floatProperties._OutlineWidthMode !== 'undefined') {\r\n            material.outlineWidthMode = prop.floatProperties._OutlineWidthMode;\r\n        }\r\n        if (typeof prop.floatProperties._OutlineColorMode !== 'undefined') {\r\n            material.outlineColorMode = prop.floatProperties._OutlineColorMode;\r\n        }\r\n        if (typeof prop.floatProperties._CullMode !== 'undefined') {\r\n            material.cullMode = prop.floatProperties._CullMode;\r\n        }\r\n        if (typeof prop.floatProperties._OutlineCullMode !== 'undefined') {\r\n            material.outlineCullMode = prop.floatProperties._OutlineCullMode;\r\n        }\r\n        if (typeof prop.floatProperties._Cutoff !== 'undefined') {\r\n            material.alphaCutOff = prop.floatProperties._Cutoff;\r\n        }\r\n        if (typeof prop.vectorProperties._Color !== 'undefined') {\r\n            material.diffuseColor = new Color3(\r\n                prop.vectorProperties._Color[0],\r\n                prop.vectorProperties._Color[1],\r\n                prop.vectorProperties._Color[2],\r\n            );\r\n            material.alpha = prop.vectorProperties._Color[3];\r\n        }\r\n        if (typeof prop.vectorProperties._ShadeColor !== 'undefined') {\r\n            material.shadeColor = new Color3(\r\n                prop.vectorProperties._ShadeColor[0],\r\n                prop.vectorProperties._ShadeColor[1],\r\n                prop.vectorProperties._ShadeColor[2],\r\n            );\r\n        }\r\n        if (typeof prop.floatProperties._BumpScale !== 'undefined') {\r\n            material.bumpScale = prop.floatProperties._BumpScale;\r\n        }\r\n        if (typeof prop.floatProperties._ReceiveShadowRate !== 'undefined') {\r\n            material.receiveShadowRate = prop.floatProperties._ReceiveShadowRate;\r\n        }\r\n        if (typeof prop.floatProperties._ShadingGradeRate !== 'undefined') {\r\n            material.shadingGradeRate = prop.floatProperties._ShadingGradeRate;\r\n        }\r\n        if (typeof prop.floatProperties._ShadeShift !== 'undefined') {\r\n            material.shadeShift = prop.floatProperties._ShadeShift;\r\n        }\r\n        if (typeof prop.floatProperties._ShadeToony !== 'undefined') {\r\n            material.shadeToony = prop.floatProperties._ShadeToony;\r\n        }\r\n        if (typeof prop.floatProperties._LightColorAttenuation !== 'undefined') {\r\n            material.lightColorAttenuation = prop.floatProperties._LightColorAttenuation;\r\n        }\r\n        if (typeof prop.floatProperties._IndirectLightIntensity !== 'undefined') {\r\n            material.indirectLightIntensity = prop.floatProperties._IndirectLightIntensity;\r\n        }\r\n        if (typeof prop.vectorProperties._EmissionColor !== 'undefined') {\r\n            material.emissiveColor = new Color3(\r\n                prop.vectorProperties._EmissionColor[0],\r\n                prop.vectorProperties._EmissionColor[1],\r\n                prop.vectorProperties._EmissionColor[2],\r\n            );\r\n        }\r\n        if (typeof prop.floatProperties._OutlineWidth !== 'undefined') {\r\n            material.outlineWidth = prop.floatProperties._OutlineWidth;\r\n        }\r\n        if (typeof prop.floatProperties._OutlineScaledMaxDistance !== 'undefined') {\r\n            material.outlineScaledMaxDistance = prop.floatProperties._OutlineScaledMaxDistance;\r\n        }\r\n        if (typeof prop.vectorProperties._OutlineColor !== 'undefined') {\r\n            material.outlineColor = new Color3(\r\n                prop.vectorProperties._OutlineColor[0],\r\n                prop.vectorProperties._OutlineColor[1],\r\n                prop.vectorProperties._OutlineColor[2],\r\n            );\r\n        }\r\n        if (typeof prop.floatProperties._OutlineLightingMix !== 'undefined') {\r\n            material.outlineLightingMix = prop.floatProperties._OutlineLightingMix;\r\n        }\r\n        if (typeof prop.floatProperties._BlendMode !== 'undefined') {\r\n            switch (prop.floatProperties._BlendMode) {\r\n                case 0: // Opaque\r\n                    material.alphaBlend = false;\r\n                    material.alphaTest = false;\r\n                    material.alphaMode = Engine.ALPHA_DISABLE;\r\n                    break;\r\n                case 1: // TransparentCutout\r\n                    material.alphaBlend = false;\r\n                    material.alphaTest = true;\r\n                    material.alphaMode = Engine.ALPHA_COMBINE;\r\n                    break;\r\n                case 2: // Transparent\r\n                    material.alphaBlend = true;\r\n                    material.alphaTest = false;\r\n                    material.alphaMode = Engine.ALPHA_COMBINE;\r\n                    break;\r\n            }\r\n        }\r\n        if (typeof prop.keywordMap._ALPHABLEND_ON !== 'undefined') {\r\n            material.alphaBlend = prop.keywordMap._ALPHABLEND_ON;\r\n        }\r\n        if (typeof prop.keywordMap._ALPHATEST_ON !== 'undefined') {\r\n            material.alphaTest = prop.keywordMap._ALPHATEST_ON;\r\n        }\r\n        if (typeof prop.floatProperties._ZWrite !== 'undefined') {\r\n            material.forceDepthWrite = prop.floatProperties._ZWrite === 1;\r\n            if (material.forceDepthWrite) {\r\n                material.disableDepthWrite = false;\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"sourceRoot":""}